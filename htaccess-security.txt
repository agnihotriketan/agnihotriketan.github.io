/**
 * .htaccess Security Configuration
 * Add these directives to your .htaccess file for enhanced security
 * Note: This is a template file - rename to .htaccess and customize for your needs
 */

# ================================
# SECURITY HEADERS
# ================================

# Force HTTPS
<IfModule mod_rewrite.c>
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteCond %{HTTP_HOST} !^localhost
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
</IfModule>

# HTTP Strict Transport Security (HSTS)
<IfModule mod_headers.c>
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
</IfModule>

# Content Security Policy
<IfModule mod_headers.c>
    Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: blob:; connect-src 'self' https://www.google-analytics.com https://analytics.google.com; media-src 'self' https:; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none'; upgrade-insecure-requests"
</IfModule>

# X-Frame-Options (Clickjacking Protection)
<IfModule mod_headers.c>
    Header always set X-Frame-Options "DENY"
</IfModule>

# X-Content-Type-Options (MIME Sniffing Protection)
<IfModule mod_headers.c>
    Header always set X-Content-Type-Options "nosniff"
</IfModule>

# X-XSS-Protection
<IfModule mod_headers.c>
    Header always set X-XSS-Protection "1; mode=block"
</IfModule>

# Referrer Policy
<IfModule mod_headers.c>
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
</IfModule>

# Permissions Policy (Feature Policy)
<IfModule mod_headers.c>
    Header always set Permissions-Policy "camera=(), microphone=(), geolocation=(), interest-cohort=()"
</IfModule>

# ================================
# FILE ACCESS CONTROL
# ================================

# Protect sensitive files
<FilesMatch "\.(htaccess|htpasswd|ini|log|sh|sql|txt)$">
    Require all denied
</FilesMatch>

# Protect specific files
<Files "robots.txt">
    Require all granted
</Files>

<Files "sitemap.xml">
    Require all granted
</Files>

<Files "ads.txt">
    Require all granted
</Files>

# Block access to version control and backup files
<FilesMatch "\.(git|svn|hg|bak|backup|swp|tmp)">
    Require all denied
</FilesMatch>

# Block access to configuration files
<FilesMatch "\.(env|config|conf|ini)$">
    Require all denied
</FilesMatch>

# ================================
# DIRECTORY PROTECTION
# ================================

# Disable directory browsing
Options -Indexes

# Protect .git directory
<DirectoryMatch "\.git">
    Require all denied
</DirectoryMatch>

# Protect node_modules (if present)
<DirectoryMatch "node_modules">
    Require all denied
</DirectoryMatch>

# ================================
# REQUEST FILTERING
# ================================

# Block suspicious requests
<IfModule mod_rewrite.c>
    RewriteEngine On
    
    # Block common exploit attempts
    RewriteCond %{QUERY_STRING} (<|%3C).*script.*(>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2}) [OR]
    RewriteCond %{QUERY_STRING} proc/self/environ [OR]
    RewriteCond %{QUERY_STRING} mosConfig_[a-zA-Z_]{1,21}(=|\%3D) [OR]
    RewriteCond %{QUERY_STRING} base64_(en|de)code\(.*\) [OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*iframe.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*object.*(\>|%3E) [NC,OR]
    RewriteCond %{QUERY_STRING} (\<|%3C).*embed.*(\>|%3E) [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # Block suspicious user agents
    RewriteCond %{HTTP_USER_AGENT} (nikto|sqlmap|nmap|w3af|nessus|masscan|netsparker) [NC]
    RewriteRule ^(.*)$ - [F,L]
    
    # Block requests with suspicious patterns
    RewriteCond %{REQUEST_URI} (eval\(|union.*select|insert.*into|drop.*table) [NC]
    RewriteRule ^(.*)$ - [F,L]
</IfModule>

# ================================
# RATE LIMITING
# ================================

# Basic rate limiting (requires mod_evasive or similar)
<IfModule mod_evasive24.c>
    DOSHashTableSize    2048
    DOSPageCount        10
    DOSSiteCount        50
    DOSPageInterval     1
    DOSSiteInterval     1
    DOSBlockingPeriod   600
</IfModule>

# ================================
# SSL/TLS CONFIGURATION
# ================================

# Only allow strong SSL ciphers (if you control SSL config)
# SSLProtocol -all +TLSv1.2 +TLSv1.3
# SSLCipherSuite ECDHE+AESGCM:ECDHE+CHACHA20:DHE+AESGCM:DHE+CHACHA20:!aNULL:!MD5:!DSS
# SSLHonorCipherOrder on

# ================================
# MIME TYPE SECURITY
# ================================

# Prevent MIME type sniffing for uploaded files
<IfModule mod_mime.c>
    # Force download for certain file types
    <FilesMatch "\.(exe|dmg|tar|gz|zip|rar)$">
        Header set Content-Type "application/octet-stream"
        Header set Content-Disposition "attachment"
    </FilesMatch>
    
    # Set proper MIME types
    AddType text/html .html .htm
    AddType text/css .css
    AddType application/javascript .js
    AddType application/json .json
    AddType application/xml .xml
    AddType image/svg+xml .svg
    AddType application/manifest+json .webmanifest
</IfModule>

# ================================
# CACHING AND PERFORMANCE
# ================================

# Enable compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
    AddOutputFilterByType DEFLATE application/json
    AddOutputFilterByType DEFLATE image/svg+xml
</IfModule>

# Set cache headers for security and performance
<IfModule mod_expires.c>
    ExpiresActive on
    
    # Security-related files should not be cached
    <FilesMatch "\.(htaccess|htpasswd)$">
        ExpiresDefault "access plus 0 seconds"
        Header set Cache-Control "no-cache, no-store, must-revalidate, max-age=0"
        Header set Pragma "no-cache"
    </FilesMatch>
    
    # Static assets can be cached longer
    ExpiresByType text/css "access plus 1 year"
    ExpiresByType application/javascript "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType font/woff "access plus 1 year"
    ExpiresByType font/woff2 "access plus 1 year"
    
    # HTML files should be revalidated more frequently
    ExpiresByType text/html "access plus 1 hour"
    
    # Manifest and service worker should be revalidated
    ExpiresByType application/manifest+json "access plus 1 hour"
    <FilesMatch "sw\.js$">
        ExpiresDefault "access plus 0 seconds"
        Header set Cache-Control "no-cache, no-store, must-revalidate, max-age=0"
    </FilesMatch>
</IfModule>

# ================================
# ERROR PAGES
# ================================

# Custom error pages (create these files)
ErrorDocument 400 /error-pages/400.html
ErrorDocument 401 /error-pages/401.html
ErrorDocument 403 /error-pages/403.html
ErrorDocument 404 /error-pages/404.html
ErrorDocument 500 /error-pages/500.html

# ================================
# ADDITIONAL SECURITY MEASURES
# ================================

# Hide Apache version
ServerTokens Prod
ServerSignature Off

# Disable server-side includes
Options -Includes

# Disable CGI execution
Options -ExecCGI

# Disable symbolic links
Options -FollowSymLinks

# Remove ETags (privacy)
<IfModule mod_headers.c>
    Header unset ETag
</IfModule>
FileETag None

# ================================
# MONITORING AND LOGGING
# ================================

# Enhanced logging for security analysis
<IfModule mod_log_config.c>
    LogFormat "%h %l %u %t \"%r\" %>s %O \"%{Referer}i\" \"%{User-Agent}i\" %{X-Forwarded-For}i" security
    # CustomLog logs/security_log security
</IfModule>

# Log security-related events
<IfModule mod_security.c>
    SecRuleEngine On
    SecRequestBodyAccess On
    SecRule REQUEST_HEADERS:Content-Type "text/xml" \
        "id:1,phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=XML"
    SecRequestBodyLimit 13107200
    SecRequestBodyNoFilesLimit 131072
    SecRequestBodyInMemoryLimit 131072
    SecRequestBodyLimitAction Reject
    SecRule REQBODY_ERROR "!@eq 0" \
        "id:2, phase:2,t:none,log,deny,status:400,msg:'Failed to parse request body.',logdata:'%{reqbody_error_msg}',severity:2"
    SecRule MULTIPART_STRICT_ERROR "!@eq 0" \
        "id:3,phase:2,t:none,log,deny,status:44,msg:'Multipart request body failed strict validation: \
        PE %{REQBODY_PROCESSOR_ERROR}, \
        BQ %{MULTIPART_BOUNDARY_QUOTED}, \
        BW %{MULTIPART_BOUNDARY_WHITESPACE}, \
        DB %{MULTIPART_DATA_BEFORE}, \
        DA %{MULTIPART_DATA_AFTER}, \
        HF %{MULTIPART_HEADER_FOLDING}, \
        LF %{MULTIPART_LF_LINE}, \
        SM %{MULTIPART_MISSING_SEMICOLON}, \
        IQ %{MULTIPART_INVALID_QUOTING}, \
        IP %{MULTIPART_INVALID_PART}, \
        IH %{MULTIPART_INVALID_HEADER_FOLDING}, \
        FL %{MULTIPART_FILE_LIMIT_EXCEEDED}'"
</IfModule>

# ================================
# FINAL NOTES
# ================================

# This configuration provides comprehensive security for Apache servers
# Test thoroughly before deploying to production
# Some directives may need adjustment based on your hosting provider
# Always keep your server software updated
# Consider using a Web Application Firewall (WAF) for additional protection